{"filter":false,"title":"comments_controller.rb","tooltip":"/app/controllers/comments_controller.rb","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["class CommentsController < ApplicationController","  def create","  end","","  def destroy","  end","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":25,"column":3},"action":"insert","lines":["class CommentsController < ApplicationController","\tbefore_action :authenticate_user!, only: [:create, :destroy]","","  def create","  \t@shot = Shot.find(params[:shot_id]) # finds the shot with the associated shot_id","  \t@comment = @shot.comments.create(comment_params) # creates the comment on the shot passing in params ","  \t@comment.user_id = current_user.id if current_user # assigns logged in user's ID to comment","  \t@comment.save!","","  \tredirect_to shot_path(@shot)","","  end","","  def destroy","  \t@shot = Shot.find(params[:shot_id])","  \t@comment = @shot.comments.find(params[:id])","  \t@comment.destroy","  \tredirect_to shot_path(@shot)","  end","","  private","","  def comment_params ","  \tparams.require(:comment).permit(:name, :response)","  end","end"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":25,"column":3},"end":{"row":25,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1582248695949,"hash":"48e50276093f397b732b55d80d55b53562a705c4"}